/*****************************************************************************************
*******************************************************************************************
**		Этот модуль содержит класс преобразования типов из укороченного 24bit float в обычнай
**	или обратно
********************************************************************************************
********************************************************************************************/

/*******************	ЛИСТ РЕГИСТРАЦИИ ИЗМЕНЕНИЙ  **************************************	
*	2,10,2006 - создан, алгоритм работает, но не так как я думал
******************************************************************************************/
#pragma once

class float24
{
	union 
	{/*Суть всей этой эпопеи - добавить 4й нулевой быйт к 24bit float*/
		unsigned char mas4[4];
		float FLT;
	}mas;
public:
	
	/*************************  GetNormalFloat(float *data)  *******************************
	*		Выдает нормальное float по указателю на float24
	****************************************************************************************/
	float GetNormalFloat(unsigned char *data)
	{
		mas.mas4[1]=*data++;
		mas.mas4[2]=*data++;
		mas.mas4[3]=*data;
		mas.mas4[0]=0;	//на всякий случай
		return mas.FLT;
	}

	/*************************  GetSmallFloat(float data)  *******************************
	*		Выдает укороченное float из обычного
	****************************************************************************************/
	unsigned char* GetSmallFloat(float data)
	{
		mas.FLT=data;
		return (unsigned char*)&mas.mas4[1];
	}
};