/***********************************************************************************
************************************************************************************
**		Этот модуль позволят программе регистрировать все сообщения и ошибки,
**	произошедшие в ней, в отдельный файл
***********************************************************************************
**********************************************************************************/

/*******************	ЛИСТ РЕГИСТРАЦИИ ИЗМЕНЕНИЙ	*******************************
*	13,10,2006	- создан
*	19,10,2006	- Теперь имя программы записывается не с помощью  макроподстановки 
*					PROGRAM_NAME, а явно передается в функцию Open
*	22.01.2007 - Избавились от warningov
*	7.04.2007 - Теперь это не файл регистрации ошибок, а журнал реистрации
*	29.05.07 - от устаревшей версии WinExec перешли к новой CreateProcess
*	4.08.07 - теперь модуль корректно работает, если m_pError==NULL;
*	16.12.07 - выкинул пока бесполезную запись приоритета
*	13.5.08 - добавил flush() в функцию записи
*	21.07.08 - наскорую руку набросал unicode
*	19.09.08 - в unicode время стало писаться корректно
*	10.04.09 - появилась возможность вести log в unicode
************************************************************************************/
#pragma once
#include "ERRORS\ERRORS.h"
#include <fstream>

using namespace std;

class LOG_FILE_Class
{
	// файл куда записываются все сообщения программы
	ofstream LogFile;
	bool Open(CString name_of_program=_TEXT(""));	//создает новый лог файл на данную сессию
	CString m_sFileName;					//имя файла
	ERROR_Class *m_pError;					//структура, в которой содержатся допущенные ошибки
	bool m_UseUnicodeFormat;				//в каком формате писать текстовый файл true - в unicode
											//										false - в ANSI
public:
	LOG_FILE_Class();

	//показывает блокнотик с файлом на экране
	bool Show(void);

	//инициализация
	bool InitLogFile(const TCHAR* file_name, ERROR_Class *pError, CString name_of_program=_TEXT(""), bool UseUnicode=false);
	
	/*****************************************
	*	ФУНКЦИИ КОТОРЫЕ ЗАНИМАЮТСЯ ДОБАВЛЕНИЕМ ЗАПИСЕЙ
	******************************************/
	bool Write(ERROR_Class *error);
	bool Write(CString error, unsigned char priority=0xFF);

};
