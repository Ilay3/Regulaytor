#pragma once

#include "CDPoint.h"						//класс точки
#include <fstream>							//для работы с файловым потоком
#include <FLOAT.h>							//для диапазонов float
#include "types_visual_c++.h"				//мои типы данных

using namespace std;
/**********************************************************************************************************
******************************************************************************************************э
**		Этот модуль определяет класс функции для отрисовки данных, к также как контейнер памяти данных
**	В ней содержатся такие поля, как например время отображения на экране (ширина по оси Х), область ото-ъ
**	бражаемых значений (ось Y), как эту функцию отрисовывать, и т.д. и т.п.
*********************************************************************************************************
**********************************************************************************************************/

/***************************	ЛИСТ РЕГИСТРАЦИИ ИЗМЕНЕНИЙ	**********************************************
*	30.11.2006 - добавлена функция AddGraphWhithTime
*					+ почеловечески переименован коэффициент пропорциональности
*	8.12.2006 - добавлена функция CutTimeOneFunc
*	3.1.2007 - из функции AddGraphWhithTime удален безрезультатный выход, если график остановлен
*				добавлены функции GetMaxValue и GetMinValue
*	5.1.2007 - добавлено свойство AlwaysDown
*	6.1.2007 - добавлены функции GetMaxTime и GetMinTime
*	1.03.2007 - старое название класса заменено на CFunctionClass (!!! Это повлияло на совместимость со старыми версиями)
*	8.05.2007 - класс объявляееся как экспортируемый(AFX_EXT_CLASS). Сделано это для того, чтобы
*				в приложении, юзающем Dll с графиком статические переменные были видны в Dll файле, а иначе все
*				глючит, создаются их вторые копии и ядерный взрыв...
*	5.11.2007 - добавлен тип прорисовки функции G_LINEDOTCHART
*	18.01.2008 - немного модифицирована функция чтения из файла
*	11.03.2008 - вышел в свет формат "ver 1.1", в который добавлены ширина линии, тип линии, а также 
*					свойство AlwaysDown, дополнительный цвет (ColorEx), пропорциональный коэффициент
*	07.05.2008 - Класс научился вычислять максимальное и минимальное значение функции на определенный
*					временныех границах
*	03.07.2008 - при вычислении максимального и минимального значения функции стал учитываться коэффициент
*					пропорциональности
*	21.07.2008 - при компиляции стал поддерживаться unicode, назрело создание версии 1.2
*	22.07.2008 - убрал свойство FuncType, которое меня только путало
*	26.07.2008 - конструктор вынесен в заголовочный файл, т.к. именно из-за этого глючил release проект
***********************************************************************************************************/

/***********************************************************************************
*							КОНСТАНТЫ
***********************************************************************************/
//как отрисовавыть график
#define G_BARCHART_TIGHT	0x00	//узенькие вертикальные столбики
#define G_BARCHART_WIDE		0x03	//вертикальные столбики, которые боком соприкасаются 
										//друг с другом
#define G_BARCHART_TIGHT_2	0x04	//Представьте такую ситуацию, у нас много графиков, и все
										//они отображаются столбиками. Если их много, то они будут перекрывать друг друга!
										//чтобы этого не произошло, мы будем для каждого графика рисовать столбик поуже, у нас
										//т.о. получится несколько столбиков по соседству, но они не будут перекрываться
										//Этот тип будет работать ТОЛЬКО, если все графики имеют одни и те же точки по оси Х
										//и все графики только этого типа
#define G_LINECHART			0x01	//непрерывная линия
#define G_DOTCHART			0x02	//маленькие кружочки в точках данных
#define G_LINEDOTCHART		0x05	//Непрерывная линия + маленькие кружочки в точках данных

#define VERSION_GRAPH_FILE		"ver 1.1"	//можно менять при модернизации формата, но длина должна оставаться ПОСТОЯННОЙ
#define VERSION_GRAPH_FILE_LEN	7			//категорически ЗАПРЕЩАЕТСЯ менять

/***********************************************************************************
***********************************************************************************/

//здесь содержится информация о каждой конкретной функции
class AFX_EXT_CLASS CFunctionClass
{
	
public:
	//Не знаю почему, но если конструктор расположить в срр файле, то при выполеннии 
	//release проекта visual c++ выдает исключение
	CFunctionClass();
	~CFunctionClass();

	bool Visible;					//true - показывать на экране false - скрыть

	INT8U ChartType;				//От этого свойства зависит, как будет прорисовываться наша функция
									//например G_LINECHART, G_DOTCHART, G_BARCHART_TIGHT и др.
	
	/**************************************************************
	*	Далее идут свойства, которые составляют костяк графика
	**************************************************************/
	CString		szFunctionName;		//имя функции
	CString		szYLegend;			//подпись оси Y
	CString		szXLegend;			//подпись оси X
	FP32		ProporCoef;			//коэффициент пропорциональности
	COLORREF	Color;				//цвет этого графика
	COLORREF	ColorEx;			//цвет для дополнительных нужд (например цвет рамки при рисовании столбиками)
									//используется редко
	INT8U		LineWidth;			//толщина линии, которой отрисовывается функция
	INT8U		LineType;			//тип линии, которой отрисовывается функция (например пунктирная)
	//это свойство говорит, что функция всегда должна быть подтянута книзу экрана
	//, что требуется при одновременном показе например средней функции и дисперсии
	bool		AlwaysDown;			//true  - свойство включено 
									//false - свойство выключено
	VECPTS		pPlotXYItems;		//массив с точками графика

	//а в этой функции время добавляется вручную
	bool AddGraphWhithTime (FP32 var, FP32 time);	//!!!!! time - в СЕКУНДАХ!!!!!
	
	//эта функция вырезает из графика все значения входящие, или наоборот не входящие в диапазон
	bool CutTimeOneFunc(FP32 TimeForm, FP32 TimeTo, bool reverse);

	//возвращает масимальное значение текущей функции
	FP32 GetMaxValue(FP32 FromTime=-FLT_MAX, FP32 ToTime=FLT_MAX, bool UseProporCoef=true);
	//возвращает минимальное значение текущей функции
	FP32 GetMinValue(FP32 FromTime=-FLT_MAX, FP32 ToTime=FLT_MAX, bool UseProporCoef=true);
	//возвращает максимальное время, при котором в этом графике есть точка
	FP32 GetMaxTime();
	//возвращает минимальное время, при котором в этом графике есть точка
	FP32 GetMinTime();

	//Однако, т.к. 1) появилось несколько версий файла и 2) эти функции ничего не говорят об успешности
	//выполненных операций, то пришлось сделать как фукнции
	bool WriteFunction(ofstream& os);
	bool ReadFunction_1_0(ifstream& is);	//версия 1.0
	bool ReadFunction_1_1(ifstream& is);	//версия 1.1
};

