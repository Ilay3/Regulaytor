#include "stdafx.h"

/************************	GiveHexFromStr	*********************************
*	Конвертирует строку, в которой шестнадцатеричные значения пропи-
*	саны как строки в массив чисел. Шестнадцатеричные значения должны быть запи-
*	саны в массив в виде 0х?? 0х?? 0х00 и т.д.
**********************************************************************************/
unsigned short GiveHexFromStr(CString str, unsigned char * mas, CString* error=NULL)
{
	/*
	Функция возвращает длину посылки,
	str		- строка с шестнадцатеричными значениями
	mas		- указатель на буфер с итоговыми значениями
	error	- эта переменная будет содержать либо ошибку, либо "" если ошибки не будет 
	*/
	CString str1, str2;
	int col;		//номер пробела при поиске
	str1=str;
	for(unsigned short i=0;;i++)
	{//с каждым новым i будет обработано очередное шестнадцатеричное значение
        str1=str1.TrimLeft();
		if(str1==_T(" ") || str1==_T(""))
		{//исчерпали шестнадцатеричные значения
			return i;
		}
		col=str1.Find(' ');
		if(col!=-1)
		{//если вообще есть пробелы
			str2=str1.Left(col);	//выделим часть до пробела
		}
		else
		{//это конец
			str2=str1;				//обработаем последний символ
			str1=_T("");				//чтобы на следующем витке цикла мы вышли
		}
		unsigned short k=str2.GetLength();
		if(k==4)
		{//шестнадцатеричное число типа 0хХХ
			str2=str2.Right(2);
		}
		else if(k==3)
		{//шестнадцатеричное число типа 0хХ
			str2=str2.Right(1);
		}
		else
		{//незнамо что...
			if(error!=NULL)
			{
				*error=_T("Одно из шестнадцатеричных чисел занимает больше байта в размере");
			}
			return 0;
		}

		TCHAR* stopstring;
		mas[i]=(unsigned char)_tcstol(str2.GetBuffer(),&stopstring,16);
		if(stopstring==str2.GetBuffer())
		{//невозможно сделать преобразование
			if(error!=NULL)
			{
				*error=_T("Данные в массиве не поддаются обработке");
			}
			return 0;
		}
		if(col!=0xff)
		{//пока остались пробелы
			str1=str1.Right(str1.GetLength()-col-1);//обрежем использованное
		}
		else
		{
			if(error!=NULL)
			{//ошибок не было, оповестим об этом
				*error=_T("");
			}
			return i+1;	//возвращаем количество обработанных чисел
		}
	}

	if(error!=NULL)
	{//а вот здесь мы не должны вообще никогда оказаться
		*error=_T("Это невероятно!!!");
	}
	return 0;
}


/*************	GiveStrFromHex(char * mes, unsigned char len)	****************
*	 выдает строку с шестнадцатеричными значеними буфера, чтобы человек
*	мог легко посмотреть его содержание
********************************************************************************/
CString GiveStrFromHex(unsigned char * mes, size_t len)
{
	CString lHexString;
	
	if(mes==NULL)
	{//просто очередная защита
		return CString(_T(""));
	}

	for(size_t i=0;i<len; i++)
	{//пройдусь по всем байтам сообщения
		CString str; str.Format(_T("0x%02X "),mes[i]);
		lHexString+=str;
	}
	return lHexString;
}