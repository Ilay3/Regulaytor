/*************************************************************************************
**************************************************************************************
**		Этот модуль содержит функции, которые преобразуют данные из формата Сергей Влади-
**	мировича в стандартный. В частости целые и с плавающей точкой
**************************************************************************************
*************************************************************************************/

/****************	ЛИСТ РЕГИСТРАЦИИ ИЗМЕНЕНИЙ	****************************************
*	3.05.07 - создан
*	20.06.07 - теперь при вызове float_to_SV память не выделятся динамически, что
*				исключает утечки памяти.
*	14.09.07 - добавлена функция int_to_SV2BUINT_ST
*	22.05.08 - модуль удачно стал переводить в формат СВ отрицательные числа
*	10.06.08 - модуль удачно стал переводить из формата СВ отрицательные числа
****************************************************************************************/
#pragma once
#include <types_visual_c++.h>	//мои типы данных

//Расшифровки:
// SV - трехбайтный формат предствлени числа с плавающей точкой, отличается не только
//		длиной, но и внутренней структурой
// SV3BUINT - трехбайтное предстваление целого числа без знака



//Конвертация из данных СВ в обычный float
float SV_to_float(unsigned char * pData);
//Конвертация из обычного float в формат СВ
unsigned char * float_to_SV(float Data);

//двухбайтное целое старшим байтом вперед
INT16U SV2BUINT_to_int_ST(unsigned char * pData);
void int_to_SV2BUINT_ST(INT16U Data, INT8U* pBuf);

//Целочисленная конвертация СТАРШИМ байтом вперед
unsigned int SV3BUINT_to_int_ST(unsigned char * pData);
unsigned char * int_to_SV3BUINT_ST(unsigned int Data);

//Целочисленная конвертация МЛАДШИМ байтом вперед
unsigned int SV3BUINT_to_int_ML(unsigned char * pData);
INT8U * int_to_SV3BUINT_ML(INT32U Data);

