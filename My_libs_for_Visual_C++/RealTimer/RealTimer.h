/*******************************************************************************
********************************************************************************
**		Этот модуль содержит класс, упрощающий работу с точными таймерами
******************************************************************************
*******************************************************************************/

/*********	ЛИСТ РЕГИСТРАЦИИ ИЗМЕНЕНИЙ	****************************************
*		13.04.07 - создан, теперь библиотека winmn.lib к проекту подключается автоматически
**********************************************************************************/
#pragma once
#include <windows.h>
#include <Mmsystem.h>

#pragma comment(lib,"winmm.lib")	//без этого работать не будет

/*	НЕ ЗАБЫТЬ ПОДКЛЮЧИТЬ БИБЛИОТЕКУ Winmm.lib В СВОЙСТВАХ ПРОЕКТА/LINKER/INPUT/ADDITIONAL DEPENDENSINS
	НЕ ЗАБЫТЬ ПОДКЛЮЧИТЬ ЕЕ В РЕЛИЗЕ И В ДЕБУГЕ (теперь не надо!!!)
	Передаваемые параметры:
	- period ^ период срабатывания в мс
	- precision ^ точность срабатывания (мс) 
	- Periodic ^ true - таймер будет срабатывать периодически, false - только один раз
	- pFunction ^ указатель на функцию, которая будет вызаваться по истечении таймера
		Например:
		void CALLBACK OneShotTimer(UINT wTimerID, UINT msg, DWORD dwUser, DWORD dw1, DWORD dw2) 
		{ 
			static long h=0;
			h++;
			if (h==6000)
			{
				int r=360;
			}
		}
	
	- MyData ^ может передать что-то еще

*/
class RealTimer_CLASS
{
protected:
	DWORD ID;
public:
	UINT GetMinPeriod();//выдает минимаьно-возможное разрешение (точность)
	bool SetTimerCallback(DWORD period, UINT precision, bool Periodic, LPTIMECALLBACK pFunction, DWORD MyData = 0);
	
	~RealTimer_CLASS();
	
	void CancelTimer(void);
};

