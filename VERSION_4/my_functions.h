/**************************************************************************
*		Этот модуль содержит функции, которые будут передаваться в классы как
*	указатель и выполнять специфичную от программы к программе работу
*	Этот модуль должен быть своим для каждой конкретной программы
***************************************************************************/
#pragma once

#include <ProtocolOptions\ProtocolOptions.h>	//опции для окна связи
#include <ERRORS\ERRORS.h>						//класс уведомления об ошибках и сообщениях
#include <Types_Visual_C++.h>					//мои типы данных

using namespace std;

#define	PROGRAM_NAME _T("Программа стендовых испытаний регуляторов ЭРЧМ30Т3")
/*
Во многих сервисах пишутся разные надписи, которые содержат информацию о программе. Это например 
лог файл и т.д. Так вот эта переменная в большистве случаев автоматизирует работу.
*/

#define LAST_BUILD
/*
Часто для дегенеративных пользователей нужно скрыть "особоумные" элементы управления. А для отладки нужно много по
бочных окон (как например окно настройки связи). При этом постоянно менять код фигово. Отслеживая этот
флаг можно сделать эту работу автоматом...
*/

class CVERSION_4Dlg;//объявление класса родительского окна

//функциии, которые компонуют сообщения
bool CompileRequestMessage(CMessage& NextMessage);
bool CompileAnswerMessage(CMessage& NextMessage);


//функция распознает сообщение, полученное по протоколу
bool OnVerify(CString * err, unsigned char *pReceiveMessage);
//фукнция, которая всё инициализирует
void InitMyFunctions(CVERSION_4Dlg* pdlg);
//DLL связи уведомляет главную программу о состоянии связи
void NotifyProgram(INT32U flags);
//внешняя функция приема символов по порту
//bool NewReceiveChar(unsigned char ch);